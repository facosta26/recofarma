"""Se crea las tablas de base de datos

Revision ID: 6e082e9d4928
Revises: 
Create Date: 2023-12-20 15:15:56.649074

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6e082e9d4928'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('people',
    sa.Column('peop_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('peop_names', sa.String(length=100), nullable=False),
    sa.Column('peop_lastnames', sa.String(length=100), nullable=False),
    sa.Column('peop_dni', sa.String(length=8), nullable=False),
    sa.Column('peop_gender', sa.String(length=1), nullable=False),
    sa.Column('peop_birthdate', sa.Date(), nullable=False),
    sa.Column('peop_created_at', sa.DateTime(), nullable=True),
    sa.Column('peop_user_created_id', sa.Integer(), nullable=False),
    sa.Column('peop_updated_at', sa.DateTime(), nullable=True),
    sa.Column('peop_user_updated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['peop_user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['peop_user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('peop_id'),
    sa.UniqueConstraint('peop_dni')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_desc', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_desc')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=10), nullable=False),
    sa.Column('user_password', sa.String(length=255), nullable=False),
    sa.Column('user_role_id', sa.Integer(), nullable=False),
    sa.Column('user_created_at', sa.DateTime(), nullable=True),
    sa.Column('user_created_id', sa.Integer(), nullable=False),
    sa.Column('user_updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_updated_id', sa.Integer(), nullable=True),
    sa.Column('user_peop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['user_peop_id'], ['people.peop_id'], ),
    sa.ForeignKeyConstraint(['user_role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('doctors',
    sa.Column('doct_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('doct_peop_id', sa.Integer(), nullable=False),
    sa.Column('doct_professional_registration', sa.String(length=20), nullable=False),
    sa.Column('doct_state', sa.String(length=1), nullable=False),
    sa.Column('doct_created_at', sa.DateTime(), nullable=True),
    sa.Column('doct_user_created_id', sa.Integer(), nullable=False),
    sa.Column('doct_updated_at', sa.DateTime(), nullable=True),
    sa.Column('doct_user_updated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doct_peop_id'], ['people.peop_id'], ),
    sa.ForeignKeyConstraint(['doct_user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['doct_user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('doct_id')
    )
    op.create_table('people_photos',
    sa.Column('peph_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('peph_path', sa.String(length=100), nullable=False),
    sa.Column('peph_peop_id', sa.Integer(), nullable=False),
    sa.Column('peph_state', sa.String(length=1), nullable=False),
    sa.Column('peph_created_at', sa.DateTime(), nullable=True),
    sa.Column('peph_user_created_id', sa.Integer(), nullable=False),
    sa.Column('peph_updated_at', sa.DateTime(), nullable=True),
    sa.Column('peph_user_updated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['peph_peop_id'], ['people.peop_id'], ),
    sa.ForeignKeyConstraint(['peph_user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['peph_user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('peph_id')
    )
    op.create_table('people_prescription',
    sa.Column('pepr_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pepr_peop_id', sa.Integer(), nullable=False),
    sa.Column('pepr_doct_id', sa.Integer(), nullable=False),
    sa.Column('pepr_state', sa.String(length=1), nullable=False),
    sa.Column('pepr_created_at', sa.DateTime(), nullable=True),
    sa.Column('pepr_user_created_id', sa.Integer(), nullable=False),
    sa.Column('pepr_updated_at', sa.DateTime(), nullable=True),
    sa.Column('pepr_user_updated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pepr_doct_id'], ['doctors.doct_id'], ),
    sa.ForeignKeyConstraint(['pepr_peop_id'], ['people.peop_id'], ),
    sa.ForeignKeyConstraint(['pepr_user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['pepr_user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('pepr_id')
    )
    op.create_table('people_prescription_details',
    sa.Column('prde_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('prde_pepr_id', sa.Integer(), nullable=False),
    sa.Column('prde_details', sa.String(length=4000), nullable=False),
    sa.Column('prde_state', sa.String(length=1), nullable=False),
    sa.Column('prde_created_at', sa.DateTime(), nullable=True),
    sa.Column('prde_user_created_id', sa.Integer(), nullable=False),
    sa.Column('prde_updated_at', sa.DateTime(), nullable=True),
    sa.Column('prde_user_updated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prde_pepr_id'], ['people_prescription.pepr_id'], ),
    sa.ForeignKeyConstraint(['prde_user_created_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['prde_user_updated_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('prde_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('people_prescription_details')
    op.drop_table('people_prescription')
    op.drop_table('people_photos')
    op.drop_table('doctors')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('people')
    # ### end Alembic commands ###
